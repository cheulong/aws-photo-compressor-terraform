image: hashicorp/terraform:1.12.0

variables:
  AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
  AWS_SECRET_ACCESS_KEY : ${AWS_SECRET_ACCESS_KEY}
  AWS_DEFAULT_REGION: "ap-southeast-1"

cache:
  paths:
    - .terraform

before_script:
  - terraform --version
  - terraform init


stages:
  - validate
  - plan
  - apply
  - destroy

validate:
  stage: validate
  script:
    - terraform validate

plan:
  stage: plan
  script:
    - terraform plan -out=tfplan
  needs:
    - validate
  artifacts:
    paths:
      - tfplan

apply:
  stage: apply
  when: manual  # to prevent auto-deployment
  script:
    - terraform init
    - terraform apply -auto-approve tfplan

destroy: 
  stage: destroy
  script:
    - terraform destroy --auto-approve
  when: manual 

# image:
#   name: registry.gitlab.com/gitlab-org/gitlab-build-images:terraform
#   entrypoint:
#     - '/usr/bin/env'
#     - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# variables:
#   TF_VAR_gitlab_token: ${GITLAB_ACCESS_TOKEN}
#   AWS_ACCESS_KEY_ID: ${MY_AWS_KEY}
#   AWS_SECRET_ACCESS_KEY : ${MY_AWS_ACCESS_KEY}
#   AWS_DEFAULT_REGION: "us-east-1"

# cache:
#   paths:
#     - .terraform

# before_script:
#   - terraform --version
#   - terraform init -backend-config="tfstate.config"

# stages:
#   - validate
#   - plan
#   - apply
#   - destroy

# validate:
#   stage: validate
#   script:
#     - terraform validate



# apply:
#   stage: apply
#   script:
#     - terraform apply -input=false "planfile"
#   dependencies:
#     - plan
#   when: manual

# destroy: 
#   stage: destroy
#   script:
#     - terraform destroy --auto-approve
#   when: manual 