image: 
  name: hashicorp/terraform:1.12.0
  entrypoint: [""]

variables:
  TF_ROOT: ""
  AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
  AWS_SECRET_ACCESS_KEY : ${AWS_SECRET_ACCESS_KEY}
  AWS_DEFAULT_REGION: "ap-southeast-1"

cache:
  paths:
    - .terraform

before_script:
  - terraform --version
  - cd $TF_ROOT
  - terraform init


stages:
  - validate
  - plan
  - apply
  - destroy

validate_dev:
  stage: validate
  variables:
    TF_ROOT: "dev"
  script:
    - terraform validate
  rules:
    - changes:
        - dev/**

plan_dev:
  stage: plan
  variables:
    TF_ROOT: "dev"
  script:
    - terraform plan -out=tfplan
  rules:
    - changes:
        - dev/**
  needs:
    - validate_dev
  artifacts:
    paths:
      - tfplan

apply_dev:
  stage: apply
  needs:
    - plan_dev
  variables:
    TF_ROOT: "dev"
  script:
    - terraform apply -auto-approve tfplan
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - dev/**
        
validate_staging:
  stage: validate
  variables:
    TF_ROOT: "staging"
  script:
    - terraform validate
  rules:
    - changes:
        - staging/**

plan_staging:
  stage: plan
  variables:
    TF_ROOT: "staging"
  script:
    - terraform plan -out=tfplan
  rules:
    - changes:
        - staging/**
  needs:
    - validate_staging
  artifacts:
    paths:
      - tfplan

apply_staging:
  stage: apply
  needs:
    - plan_staging
  variables:
    TF_ROOT: "staging"
  script:
    - terraform apply -auto-approve tfplan
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - staging/**

validate_prod:
  stage: validate
  variables:
    TF_ROOT: "prod"
  script:
    - terraform validate
  rules:
    - changes:
        - prod/**

plan_prod:
  stage: plan
  variables:
    TF_ROOT: "prod"
  script:
    - terraform plan -out=tfplan
  rules:
    - changes:
        - prod/**
  needs:
    - validate_prod
  artifacts:
    paths:
      - tfplan

apply_prod:
  stage: apply
  needs:
    - plan_prod
  variables:
    TF_ROOT: "prod"
  script:
    - terraform apply -auto-approve tfplan
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - prod/**

destroy_dev: 
  stage: destroy
  variables:
    TF_ROOT: "dev"
  script:
    - terraform destroy --auto-approve
  when: manual 

destroy_staging: 
  stage: destroy
  variables:
    TF_ROOT: "staging"
  script:
    - terraform destroy --auto-approve
  when: manual 

destroy_prod: 
  stage: destroy
  variables:
    TF_ROOT: "prod"
  script:
    - terraform destroy --auto-approve
  when: manual 
